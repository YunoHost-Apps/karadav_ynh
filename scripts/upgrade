#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

### Settings are automatically loaded as bash variables
### in every app script context, therefore typically these will exist:
### - $domain
### - $path
### - $language
### - $install_dir
### - $port
### ...

### In the context of upgrade,
### - resources are automatically provisioned / updated / deleted (depending on existing resources)
### - a safety backup is automatically created by the core and will be restored if the upgrade fails

### This variable describes which upgrade type is occurring, allowing the script to handle different modes:
### - UPGRADE_PACKAGE if only the YunoHost package has changed
### - UPGRADE_APP if the upstream app version has changed
### If your package needs to handle other things, like same-version upgrades or downgrades, please
### check out the $YNH_APP_UPGRADE_TYPE variable that can contain DOWNGRADE and UPGRADE_SAME too.
# upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
#ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

### N.B. : the following setting migration snippets are provided as *EXAMPLES*
### of what you may want to do in some cases (e.g. a setting was not defined on
### some legacy installs and you therefore want to initiaze stuff during upgrade)

# If db_name doesn't exist, create it
# if [ -z "$db_name" ]; then
#     db_name=$(ynh_sanitize_dbid --db_name=$app)
#     ynh_app_setting_set --app=$app --key=db_name --value=$db_name
# fi

# If install_dir doesn't exist, create it
# if [ -z "$install_dir" ]; then
#     install_dir=/var/www/$app
#     ynh_app_setting_set --app=$app --key=install_dir --value=$install_dir
# fi

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Stopping a systemd service..." --weight=1

ynh_systemd_action --service_name="$app" --action="stop" --log_path="/var/log/$app/$app.log"

#=================================================
# "REBUILD" THE APP (DEPLOY NEW SOURCES, RERUN NPM BUILD...)
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

ynh_script_progression --message="Upgrading source files..." --weight=1

# Download, check integrity, uncompress and patch the source from manifest.toml
ynh_setup_source --dest_dir="$install_dir" --keep=="db.sqlite"

chown -R "$app:www-data" "$install_dir"

#=================================================
# REAPPLY SYSTEM CONFIGURATIONS
#=================================================
ynh_script_progression --message="Upgrading system configurations related to $app..." --weight=1

ynh_add_fpm_config

ynh_add_nginx_config

ynh_add_systemd_config

yunohost service add "$app" --description="KaraDAV, WebDAV server" --log="/var/log/$app/$app.log"

ynh_use_logrotate --non-append

#ynh_add_fail2ban_config --logpath="/var/log/nginx/${domain}-error.log" --failregex="Regex to match into the log for a failed login"

#=================================================
# RECONFIGURE THE APP (UPDATE CONF, APPLY MIGRATIONS...)
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..." --weight=1

ynh_add_config --template="config.local.php" --destination="$install_dir/config.local.php"

chmod 400 "$install_dir/config.local.php"
chown "$app:$app" "$install_dir/config.local.php"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --weight=1

ynh_systemd_action --service_name="$app" --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
